plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id("kotlin-parcelize")
    id("androidx.navigation.safeargs.kotlin")

}

apply from: '../dependencies.gradle'



android {
    compileSdk 31

    defaultConfig {
        applicationId "com.iobytex.task"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        def secureProps = new Properties()
        if (file("../secure.properties").exists()) {
            file("../secure.properties")?.withInputStream { secureProps.load(it) }
        }
        buildConfigField("String", "PLACES_API_KEY", (secureProps.getProperty("PLACES_API_KEY") ?: "\"\""))
        buildConfigField("String", "WEATHER_API_KEY", (secureProps.getProperty("WEATHER_API_KEY") ?: "\"\""))
        buildConfigField("String", "WEATHER_API_URL", (secureProps.getProperty("WEATHER_API_URL") ?: "\"\""))



        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"
            freeCompilerArgs += "-Xopt-in=kotlin.ExperimentalStdlibApi"


            // Set JVM target to 11
            jvmTarget = JavaVersion.VERSION_11
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.5.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Lifecycle
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle")
    kapt("androidx.lifecycle:lifecycle-compiler:$versions.lifecycle")

    //Activity
    implementation("androidx.activity:activity-ktx:$versions.activity")

    //Fragment
    implementation("androidx.fragment:fragment-ktx:$versions.fragment")
    debugImplementation("androidx.fragment:fragment-testing:$versions.fragment")

    //Google Play Service
    implementation("com.google.android.gms:play-services-location:$versions.playService")

    //Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$versions.nav")
    implementation("androidx.navigation:navigation-ui-ktx:$versions.nav")
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$versions.nav")


    //Retrofit
    implementation("com.squareup.retrofit2:retrofit:$versions.retrofit")
    implementation("com.squareup.retrofit2:converter-moshi:$versions.retrofit")

    //Moshi
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")

    //Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines")

    implementation ("com.microsoft.design:fluent-system-icons:$versions.fluent_icon")

    //Hilt
    implementation("com.google.dagger:hilt-android:$versions.hilt")
    kapt("com.google.dagger:hilt-compiler:$versions.hilt")

    //Timber
    implementation("com.jakewharton.timber:timber:$versions.timber")

    //Room
    implementation("androidx.room:room-runtime:$versions.room")
    annotationProcessor("androidx.room:room-compiler:$versions.room")
    kapt("androidx.room:room-compiler:$versions.room")
    implementation("androidx.room:room-ktx:$versions.room")

    //DataStore
    implementation("androidx.datastore:datastore-preferences:$versions.datastore")

    //Google Place
    implementation("com.google.maps.android:places-ktx:0.4.0")

    //WorkManager
    implementation("androidx.work:work-runtime-ktx:$versions.work")

    //Palette
    implementation("com.android.support:palette-v7:$versions.palette")

    //ThreeTen
    implementation("org.threeten:threetenbp:$versions.threeTen")

    //Zxing
    implementation("com.google.zxing:android-integration:$versions.zxing")
    implementation("com.google.zxing:android-core:$versions.zxing")
    //JourneyZxing
    implementation("com.journeyapps:zxing-android-embedded:$versions.journeyzxing")
}

kapt {
    correctErrorTypes true
}